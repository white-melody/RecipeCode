<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.example.comment.service.impl.CommentMapper">

  <!-- 댓글 목록 조회 (users 테이블 조인 + target_type 조건 포함 + 답글 정렬) -->
  <select id="selectCommentList"
          parameterType="egovframework.example.comment.service.CommentVO"
          resultType="egovframework.example.comment.service.CommentVO">
	SELECT
	comments.comment_id,
	comments.uuid,
	comments.user_id,
	users.nickname AS nickname,
	comments.comment_content AS content,
	TO_CHAR(comments.created_at, 'YY-MM-DD HH24:MI') AS createdAt,
	comments.parent_id AS parentId,
	comments.target_type AS targetType
	FROM comments
	INNER JOIN users ON comments.user_id = users.user_id
	WHERE comments.uuid = #{uuid}
	AND comments.target_type = #{targetType}
	ORDER BY
	NVL(comments.parent_id, comments.comment_id), -- 부모 → 자식 순서
	comments.comment_id
	OFFSET #{firstIndex} ROWS
	FETCH NEXT #{pageUnit} ROWS ONLY
  </select>

  <!-- 전체 댓글 수 조회 (target_type 조건 포함) -->
  <select id="selectCommentListTotCnt"
          parameterType="egovframework.example.comment.service.CommentVO"
          resultType="int">
    SELECT COUNT(*)
    FROM comments
    WHERE uuid = #{uuid}
      AND target_type = #{targetType}
  </select>

  <!-- 댓글 등록 -->
  <insert id="insertComment"
          parameterType="egovframework.example.comment.service.CommentVO">
    INSERT INTO comments (
      comment_id,
      uuid,
      user_id,
      target_type,
      comment_content,
      created_at,
      parent_id
    ) VALUES (
      comments_seq.NEXTVAL,
      #{uuid},
      #{userId},
      #{targetType},
      #{content},
      TO_DATE(#{createdAt}, 'YY-MM-DD HH24:MI'),
      #{parentId}
    )
  </insert>

  <!-- 댓글 삭제 -->
  <delete id="deleteComment"
          parameterType="int">
    DELETE FROM comments
    WHERE comment_id = #{commentId}
  </delete>

  <!-- 게시글 삭제 시 해당 댓글 전체 삭제 -->
  <delete id="deleteCommentsByUuid" parameterType="String">
    DELETE FROM comments
    WHERE uuid = #{uuid}
  </delete>

  <!-- 댓글 수정 -->
  <update id="updateComment" parameterType="egovframework.example.comment.service.CommentVO">
    UPDATE comments
    SET comment_content = #{content}
    WHERE comment_id = #{commentId}
  </update>

</mapper>
