<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.example.mypage.service.impl.MyPageMapper">
    <!-- 내가 작성한 레시피 -->
     <select id="selectMyRecipes" parameterType="Criteria" resultType="MyPostVO">
    SELECT * FROM (
    SELECT inner_query.*, ROWNUM AS rn FROM (
    SELECT* FROM(
    SELECT 
      UUID, USER_ID AS userId,
      RECIPE_TITLE AS title,
      COUNT,
      STANDARD_RECIPE_IMAGE AS mainImage,
      STANDARD_RECIPE_IMAGE_URL AS imageUrl,
      CONTENT_TYPE AS contentType,
      RECIPE_CREATED_AT AS createdAt
    FROM STANDARD_RECIPES
    WHERE USER_ID = #{userId}

    UNION ALL

    SELECT 
      UUID,USER_ID AS userId,
      TITLE  AS title,
      COUNT,
      RECIPE_IMAGE AS mainImage,
      RECIPE_IMAGE_URL AS imageUrl,
      CONTENT_TYPE AS contentType,
      RECIPE_CREATED_AT AS createdAt
    FROM MEDIA_RECIPES
    WHERE USER_ID = #{userId}
      
      UNION ALL

    SELECT 
      UUID,USER_ID AS userId,
      COLUMN_TITLE  AS title,
      COUNT,
      COLUMN_DATA AS mainImage,
      COLUMN_URL AS imageUrl,
      CONTENT_TYPE AS contentType,
      COLUMN_CREATED_AT AS createdAt
    FROM  FOOD_COLUMNS
    WHERE USER_ID = #{userId}
     ) all_posts
    ORDER BY createdAt DESC
       ) inner_query
    WHERE ROWNUM &lt;= #{endRow}
  )
  WHERE rn &gt; #{startRow}

</select>

 <select id="selectOneByUuid" parameterType="string" resultType="MyPostVO">
    SELECT UUID, RECIPE_IMAGE AS mainImage
    FROM MEDIA_RECIPES
    WHERE UUID = #{uuid}
    UNION ALL
    SELECT UUID, STANDARD_RECIPE_IMAGE AS mainImage
    FROM STANDARD_RECIPES
    WHERE UUID = #{uuid}
    UNION ALL
    SELECT UUID, COLUMN_DATA AS mainImage
    FROM FOOD_COLUMNS
    WHERE UUID = #{uuid}
  </select>

<select id="selectMyRecipesCount" parameterType="string" resultType="int">
  SELECT
    (
      SELECT COUNT(*) FROM STANDARD_RECIPES WHERE USER_ID = #{userId}
    ) +
    (
      SELECT COUNT(*) FROM MEDIA_RECIPES WHERE USER_ID = #{userId}
    ) +
    (
      SELECT COUNT(*) FROM FOOD_COLUMNS WHERE USER_ID = #{userId}
    ) 
     AS totalCount
     FROM DUAL
</select>

<!-- 좋아요한 레시피 -->
 <select id="selectLikedRecipes" parameterType="Criteria" resultType="MyPostVO">
    SELECT * FROM (
    SELECT inner_query.*, ROWNUM AS rn FROM (
    SELECT* FROM(
    SELECT 
      r.UUID AS uuid,
      r.USER_ID AS userId,
      r.RECIPE_TITLE AS title,
      r.COUNT AS count,
      r.STANDARD_RECIPE_IMAGE AS mainImage,
      r.STANDARD_RECIPE_IMAGE_URL AS imageUrl,
      r.CONTENT_TYPE AS contentType,
      r.RECIPE_CREATED_AT AS createdAt
    FROM LIKES l
    JOIN STANDARD_RECIPES r ON l.UUID = r.UUID
    WHERE l.USER_ID = #{userId}
      AND l.TARGET_TYPE = 'standard'
    
    UNION ALL

    SELECT 
      r.UUID AS uuid,
      r.USER_ID AS userId,
      r.TITLE AS title,
      r.COUNT AS count,
      r.RECIPE_IMAGE AS mainImage,
      r.RECIPE_IMAGE_URL AS imageUrl,
      r.CONTENT_TYPE AS contentType,
      r.RECIPE_CREATED_AT AS createdAt
    FROM LIKES l
    JOIN MEDIA_RECIPES r ON l.UUID = r.UUID
    WHERE l.USER_ID = #{userId}
      AND l.TARGET_TYPE = 'media'
      
      UNION ALL

    SELECT 
      r.UUID AS uuid,
      r.USER_ID AS userId,
      r.COLUMN_TITLE AS title,
      r.COUNT AS count,
      r.COLUMN_DATA AS mainImage,
      r.COLUMN_URL AS imageUrl,
      r.CONTENT_TYPE AS contentType,
      r.COLUMN_CREATED_AT AS createdAt
    FROM LIKES l
    JOIN FOOD_COLUMNS r ON l.UUID = r.UUID
    WHERE l.USER_ID = #{userId}
      AND l.TARGET_TYPE = 'column'
    ) all_posts
    ORDER BY createdAt DESC
   ) inner_query
    WHERE ROWNUM &lt;= #{endRow}
  )
  WHERE rn &gt; #{startRow}
</select>

<select id="selectLikedRecipesCount" parameterType="Criteria" resultType="int">
  SELECT COUNT(*) FROM (
    SELECT 1 FROM LIKES l
    JOIN STANDARD_RECIPES r ON l.UUID = r.UUID
    WHERE l.USER_ID = #{userId}
      AND l.TARGET_TYPE = 'standard'
    
    UNION ALL

    SELECT 1 FROM LIKES l
    JOIN MEDIA_RECIPES r ON l.UUID = r.UUID
    WHERE l.USER_ID = #{userId}
      AND l.TARGET_TYPE = 'media'

    UNION ALL

    SELECT 1 FROM LIKES l
    JOIN FOOD_COLUMNS r ON l.UUID = r.UUID
    WHERE l.USER_ID = #{userId}
      AND l.TARGET_TYPE = 'column'
  )
</select>

<!-- 내 정보 조회 -->  
  <select id="getPasswordByUserId" parameterType="string" resultType="string">
    SELECT PASSWORD
    FROM USERS
    WHERE USER_ID = #{userId}
</select>

<select id="getMemberById" parameterType="string" resultType="MemberVO">
  SELECT USER_ID,PASSWORD,USERNAME,PHONE_NUM,EMAIL,NICKNAME,PROFILE_IMAGE
  FROM USERS
  WHERE USER_ID = #{userId}
</select>

<select id="selectUserIdByNickname" resultType="string" parameterType="string">
  SELECT USER_ID
  FROM USERS
  WHERE NICKNAME = #{nickname}
</select>

<update id="updateMember" parameterType="MemberVO">
  UPDATE USERS
  <set>
    PHONE_NUM = #{phoneNum},
    EMAIL = #{email},
    NICKNAME = #{nickname},
    PROFILE_IMAGE = #{profileImage},
    <if test="password != null and password !=''">
    PASSWORD = #{password},
    </if>
    </set>
  WHERE USER_ID = #{userId}
</update>

<select id="getProfileImage" resultType="byte[]" parameterType="string">
  SELECT PROFILE_IMAGE FROM USERS WHERE USER_ID = #{userId}
</select>

<delete id="deleteMember" parameterType="string">
    DELETE FROM USERS WHERE USER_ID = #{userId}
</delete>

<!-- 계정삭제시 게시물 계정정보 탈퇴처리 -->

<update id="nullStand" parameterType="string">
    UPDATE STANDARD_RECIPES SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullMedia" parameterType="string">
    UPDATE MEDIA_RECIPES SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullCommunity" parameterType="string">
    UPDATE COMMUNITY SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullColumn" parameterType="string">
    UPDATE FOOD_COLUMNS SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullQna" parameterType="string">
    UPDATE QNA SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullMethod" parameterType="string">
    UPDATE FOOD_METHODS SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullLike" parameterType="string">
    UPDATE LIKES SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>
<update id="nullComment" parameterType="string">
    UPDATE COMMENTS SET USER_ID = '탈퇴한회원' WHERE USER_ID = #{userId}
</update>



</mapper>